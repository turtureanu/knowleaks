@use "../variables.scss" as *;
@use "sass:color";
@use "sass:math";

article {
  margin: 0 auto;
  padding: 5rem 2.5rem;
  padding-top: 3rem;
  max-width: $article-width;
  font-family: $article-font;
  overflow-wrap: break-word;

  a {
    color: $light;

    &:hover {
      text-decoration: underline 0.25ch $blue;
      text-decoration-skip-ink: none;
    }

    &:visited:hover {
      text-decoration-color: $purple;
    }
  }

  // two images on top on each other
  img + img {
    margin-top: 2rem;
  }

  .article-header {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  // article thumbnail
  .article-header + hr + p img {
    display: block;
    width: 100%;
    max-height: calc((100vh / 1));
    object-fit: cover;
    object-position: center;
  }

  .title {
    margin: 0;
    padding: 1em 0.5em 1em 0;
    text-align: center;
    line-height: 2.25ch;
    font-size: 2.5rem;
    font-weight: 700;
  }

  time {
    display: block;
    margin-top: -1rem;
    margin-bottom: 2rem;
    min-width: max-content;
    font-family: $code-font;
    font-weight: 500;
  }

  hr {
    display: none;
  }

  h2 {
    font-size: 2.5ch;
  }

  h3 {
    font-size: 2.125ch;
  }

  h4 {
    font-size: 1.875ch;
  }

  h5 {
    font-size: 1.675ch;
  }

  h6 {
    font-size: 1.6ch;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 1.5em 0 -0.25em;
    font-weight: 900;

    &::before {
      opacity: 0.5;
      font-weight: 400;
      content: "# ";
    }

    &:hover {
      cursor: pointer;

      &::before {
        opacity: 0.75;
      }
    }
  }

  .copied {
    &::after {
      opacity: 0.5;
      animation: fade-out 1000ms ease-out 500ms;
      font-size: smaller;
      content: " (copied URL)";

      @keyframes fade-out {
        from {
          opacity: 0.5;
        }

        to {
          opacity: 0;
        }
      }
    }
  }

  p {
    line-height: 3ch;
  }

  blockquote {
    margin: 0;
    border-left: solid 0.5rem $blue;
    border-radius: $border-radius;
    background-color: color-mix(in srgb, $blue 20%, $dark1 100%);
    padding: 0 1em;
    color: $light;

    * {
      padding: 0.5em 0;
    }

    p code {
      color: $light-blue !important;
      font-weight: 900;
    }
  }

  // astro stuff
  .astro-code {
    border-radius: $border-radius;
    padding: 1em 0;
    max-height: math.div($article-width, 2);
    font-family: $code-font;
    font-weight: 500;

    .line {
      padding: 0 1em;
    }

    // Dirty fix to get rid of the extra line that is there for some reason
    .line:last-child {
      display: none;
    }

    &,
    code {
      font-family: $code-font;
    }
  }

  .astro-code,
  .astro-code span {
      background-color: var(--shiki-dark-bg) !important;
      text-decoration: var(--shiki-dark-text-decoration) !important;
      color: var(--shiki-dark) !important;
      font-weight: var(--shiki-dark-font-weight) !important;

      /* Optional, if you also want font styles */
      font-style: var(--shiki-dark-font-style) !important;
  }

  code:not(.astro-code > code) {
    color: $blue;
    font-family: $code-font;
    font-size: smaller;
  }
  
  li {
    font-size: 1.75rem;
  }

  ol li {
    padding: 0.5em 0.25em;

    &::marker {
      color: $blue;
    }
  }

  ul li {
    padding: 0.5em 0.25em;

    &::marker {
      color: $blue;
      font-size: 2ch;
      font-weight: 900;
      /* stylelint-disable-next-line no-irregular-whitespace */
      content: "›   ";
    }
  }

  // https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_responsive_iframe_169
  .video {
    position: relative;
    padding-top: 56.25%;
    width: 100%;
    overflow: hidden;

    iframe {
      position: absolute;
      inset: 0;
      border: none;
      width: 100%;
      height: 100%;
    }
  }
}

html.light {
  /* stylelint-disable no-descending-specificity */
  a {
    color: $dark;
  }

  blockquote {
    background-image: linear-gradient(45deg, color-mix(in srgb, $blue 80%, $dark2 50%), color-mix(in srgb, $blue 80%, $light3 30%));

    a {
      color: $light;
    }
  }

  code:not(.astro-code > code) {
   font-weight: 900;
  }

  .astro-code,
  .astro-code span {
    background-color: var(--shiki-light-bg) !important;
    text-decoration: var(--shiki-light-text-decoration) !important;
    color: var(--shiki-light) !important;
    font-weight: var(--shiki-light-font-weight) !important;

    /* Optional, if you also want font styles */
    font-style: var(--shiki-light-font-style) !important;
  }
}