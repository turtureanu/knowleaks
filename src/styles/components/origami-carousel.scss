/* stylelint-disable no-descending-specificity */
@use "..//variables.scss" as *;

$paper-light: #f0f0f0ff;
$paper-gray: #d0d0d0ff;
$paper-dark: #303030ff;

// Container of everything else
.carousel {
  display: grid;
  grid-template-rows: 1fr max-content;
  grid-template-columns: max-content 1fr max-content;

  * {
    align-self: center;
    justify-self: center;
  }
}

// Container of images
.carousel-images {
  display: grid; // make a big row / flex didn't wanna work
  grid-row: 1 / 2;
  grid-column: 1 / -1;
  align-items: center;
  overflow-x: hidden; // we need this so it overflows horizontally
}

.carousel-image {
  grid-row: 1 / 2;
  grid-column: 1 / -1;
  transition: transform ease-in-out 150ms;
  margin: 0.25em 0;
  max-height: calc(100vh / 1.75); // TODO: maybe change it to something better
  object-fit: contain;
}

.carousel-button {
  grid-row: 2 / 3;
  border: solid 0.25rem $paper-gray;
  border-radius: 1rem;
  background-color: $paper-light;
  cursor: pointer;
  width: 5rem;
  height: 6rem;

  &:first-of-type {
    grid-column: 1 / 2;
    justify-self: start;
  }

  &:last-of-type {
    grid-column: -2 / -1;
  }

  &:hover,
  &:focus {
    border-color: $blue;
  }

  &:active .arrow {
    &::before,
    &::after {
      background-color: $blue;
    }
  }
}

// span with pseudo-elements using transform to look like an arrow
.arrow {
  margin-top: -0.5rem;
  width: 100%;
  height: 100%;

  &::before,
  &::after {
    display: block;
    margin: 0 auto;
    background-color: $paper-dark;
    width: 0.25rem;
    height: 2rem;
    content: "";
  }

  &::before {
    margin-top: 3rem;
  }

  &::after {
    margin-top: -3.25rem;
  }
}

.next {
  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(135deg);
  }
}

.prev {
  &::before {
    transform: rotate(135deg);
  }

  &::after {
    transform: rotate(45deg);
  }
}

// flex container of dot with flex wrap
.dots {
  display: flex;
  flex-wrap: wrap;
  grid-row: 2 /3;
  grid-column: 2 / 3;
  align-items: center;
  justify-content: center;
  margin: 0 0.25em;
  height: fit-content;
}

.dot {
  display: table-cell; // center content nicely
  margin: 0.25rem;
  border: solid 0.25rem $paper-gray;
  border-radius: 100%;
  background-color: $paper-light;
  cursor: pointer;
  width: 4rem;
  min-width: fit-content;
  height: 4rem;
  color: $dark;

  &:hover,
  &:focus {
    border-color: $blue;
  }

  // based on isCurrent set by JS
  &[data-is-current="true"] {
    border-color: $orange;
  }
}
