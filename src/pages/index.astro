---
import { getCollection } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import "../styles/components/button.scss";

const blogCollection = await getCollection("blog");
---

<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <div class="sidebar">
      <div class="header-banner">
        <img src="/logo-know.svg" alt="Knowleaks logo" />
        <p>
          <strong> Sharing things I might</strong>
          <em>forget</em><strong>.</strong>
        </p>
      </div>
      <section class="blog-posts">
        <h2>Blog posts</h2>
        {
          blogCollection.map((blogPost) => {
            if (!blogPost.data.draft) {
              // all posts which are not drafts
              return (
                <a class="button" href={`/blog-posts/${blogPost.slug}/`}>
                  <div class="title">{blogPost.data.title}</div>
                  <div class="tags">
                    {blogPost.data.tags.map((tag) => {
                      return <div class={`tag ${tag}`}>{tag}</div>;
                    })}
                  </div>
                  <span class="date">
                    {blogPost.data.pubDate.toDateString().slice(4, 16)}
                  </span>
                </a>
              );
            }
          })
        }
      </section>
      <div class="other-links">
        <nav>
          <a class="button" href="/about-me">About me</a>
          <a
            class="button"
            href="https://github.com/turtureanu/knowleaks"
            target="_blank"
            rel="norefferer">Website Source code</a
          >
        </nav>
      </div>
    </div>

    <style lang="scss">
      @use "../styles/variables.scss" as *;

      .sidebar {
        margin: 0 auto;
        display: flex;
        flex-direction: column;

        &,
        .blog-posts {
          max-width: $sidebar-width;

          @media screen and (min-width: $medium) {
            max-width: $sidebar-width + ($medium - $sidebar-width);
          }
        }

        .blog-posts {
          order: 1;

          h2 {
            text-align: center;
          }

          .tags {
            margin-top: 0.5em;
            display: flex;
            justify-content: right;

            * + * {
              margin-left: 0.5em;
            }

            .tag {
              font-size: 1.4rem;
              padding: 0.125rem 0.375em;
              border-radius: 0.5em;
              text-shadow: none;
              color: $light;
            }

            .linux {
              background-color: $linux-tag;
            }

            .security {
              background-color: $security-tag;
            }

            .origami {
              background-color: $origami-tag;
            }

            .android {
              background-color: $android-tag;
            }

            .coding {
              background-color: $coding-tag;
            }
          }
        }

        .date {
          justify-self: left;
        }

        .header-banner {
          margin: 0 auto;
          display: flex;
          justify-content: center;
          align-items: center;

          img {
            width: 70px;
            padding-right: 2rem;
            border-right: solid $dark3 0.375rem;
          }

          p {
            font-size: 2rem;
            width: 180px;
            text-align: left;
            padding-left: 2rem;
          }

          @media screen and (min-width: 400px) {
            img {
              width: 100px;
            }

            p {
              font-size: 2.4rem;
              width: 220px;
            }
          }
        }

        .other-links {
          order: 0;

          .button {
            text-align: center;
          }
        }
      }
    </style>
  </body>
</html>
